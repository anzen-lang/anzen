(fun_decl regular name='poly' type='@cst <T>(x: @cst T, y: @cst T) -> @cst T'
  (generic_params
    (generic_param_decl name='T' type='T'))
  (params
    (param_decl name='x' type='@cst T'
      (sign
        (qual_type_sign type='@cst T'
          (type_ident name='T' type='T' decl='call_005::poly(x:y:)::T'))))
    (param_decl name='y' type='@cst T'
      (sign
        (qual_type_sign type='@cst T'
          (type_ident name='T' type='T' decl='call_005::poly(x:y:)::T')))))
  (codom
    (qual_type_sign type='@cst T'
      (type_ident name='T' type='T' decl='call_005::poly(x:y:)::T'))))
(prop_decl name='a' type='@cst Int'
  (initializer
    (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_')
    (call_expr type='@cst Int'
      (callee
        (ident_expr name='poly' type='@cst <T=@cst Int>(x: @cst T, y: @cst T) -> @cst T' decl='call_005::poly(x:y:)'))
      (args
        (call_arg_expr 'x' type='@cst Int'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (int_lit_expr value='0' type='@cst Int')))
        (call_arg_expr 'y' type='@cst Int'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (int_lit_expr value='0' type='@cst Int')))))))
(prop_decl name='b' type='@cst Bool'
  (initializer
    (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_')
    (call_expr type='@cst Bool'
      (callee
        (ident_expr name='poly' type='@cst <T=@cst Bool>(x: @cst T, y: @cst T) -> @cst T' decl='call_005::poly(x:y:)'))
      (args
        (call_arg_expr 'x' type='@cst Bool'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (bool_lit_expr value='true' type='@cst Bool')))
        (call_arg_expr 'y' type='@cst Bool'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (bool_lit_expr value='false' type='@cst Bool')))))))
(prop_decl name='c' type='@cst Anything'
  (initializer
    (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_')
    (call_expr type='@cst Anything'
      (callee
        (ident_expr name='poly' type='@cst <T=@cst Anything>(x: @cst T, y: @cst T) -> @cst T' decl='call_005::poly(x:y:)'))
      (args
        (call_arg_expr 'x' type='@cst Int'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (int_lit_expr value='0' type='@cst Int')))
        (call_arg_expr 'y' type='@cst Bool'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (bool_lit_expr value='false' type='@cst Bool')))))))
