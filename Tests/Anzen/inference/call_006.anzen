// Test overloaded calls to monomorphic and polymorphic functions.
//
// This test declares two monomorphic functions and one polymorhic which overload the same symbol.
// Three properties are then initialized by using this overload with arguments of different type.
// Type inference should properly infer the type of each property.

fun overloaded<T>(x: T) -> T
fun overloaded(x: Int) -> Int
fun overloaded(x: Bool) -> Bool

// The type of `a` should be `Int`, as the result of calling `(x: Int) -> Int`.
let a = overloaded(x = 0)

// The type of `b` should be `Bool`, as the result of calling `(x: Bool) -> Bool`.
let b = overloaded(x = true)

// The type of `c` should be `String`, as the result of calling `<T>(x: T) -> T`.
let c = overloaded(x = "Hello")
