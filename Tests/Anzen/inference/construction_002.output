(struct_decl name='Box' type='Box<T>'
  (generic_params
    (generic_param_decl name='T' type='T'))
  (body
    (brace_stmt
      (fun_decl ctor name='new' type='@cst (value: @cst T) -> @mut Box<T>'
        (params
          (param_decl name='value' type='@cst T'
            (sign
              (qual_type_sign type='@cst T'
                (type_ident name='T' type='T' decl='construction_002::Box::T')))))
        (body
          (brace_stmt))))))
(prop_decl name='int_box' type='@cst Box<T=@cst Int>'
  (initializer
    (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_')
    (call_expr type='@cst Box<T=@cst Int>'
      (callee
        (ident_expr name='Box' type='@cst <T=@cst Int>(value: @cst T) -> @mut Box<T>' decl='construction_002::Box'))
      (args
        (call_arg_expr 'value' type='@cst Int'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (int_lit_expr value='0' type='@cst Int')))))))
(prop_decl name='string_box' type='@cst Box<T=@cst String>'
  (initializer
    (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_')
    (call_expr type='@cst Box<T=@cst String>'
      (callee
        (ident_expr name='Box' type='@cst <T=@cst String>(value: @cst T) -> @mut Box<T>' decl='construction_002::Box'))
      (args
        (call_arg_expr 'value' type='@cst String'
          (op
            (ident_expr name=':=' type='@cst (_: @cst Anything, _: @cst Anything) -> @cst Anything' decl='_'))
          (value
            (str_lit_expr value='"Hello, World!"' type='@cst String')))))))
